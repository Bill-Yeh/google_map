{"version":3,"file":"js/restaurants.121fcbd0.js","mappings":"iJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,KAAK,CAACE,YAAY,uBAAuB,CAACJ,EAAIK,GAAG,aAAaH,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,QAAQ,CAACI,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOT,EAAIU,eAAgBC,WAAW,mBAAmBC,IAAI,iBAAiBC,MAAM,CAAC,GAAK,eAAe,KAAO,OAAO,YAAc,WAAWC,SAAS,CAAC,MAASd,EAAIU,gBAAiBK,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,YAAiBlB,EAAIU,eAAeM,EAAOC,OAAOR,aAAYP,EAAG,MAAM,CAACE,YAAY,aAAaS,MAAM,CAAC,GAAK,cAExnBM,EAAkB,GCwCtB,GACAZ,KAAAA,iBACAa,OACA,OACAC,IAAAA,KAEAC,IAAAA,mBACAC,IAAAA,mBACAC,gBAAAA,GAEAC,WAAAA,KACAC,YAAAA,GAEAC,QAAAA,GACAC,WAAAA,EACAC,kBAAAA,GACAC,QAAAA,GACApB,eAAAA,GACAqB,MAAAA,KACAC,iBAAAA,KACAC,kBAAAA,OAGAC,UAMA,eACA,iBAaAC,QAAAA,CAEAC,UAEA,6DAEAC,OAAAA,CAAAf,IAAAA,KAAAA,IAAAC,IAAAA,KAAAA,KAEAe,KAAAA,GAEAC,QAAAA,GAEAC,QAAAA,EAEAC,mBAAAA,EAEAC,gBAAAA,IAEA,uBACAC,QAAAA,IAAAA,QAEAC,UAAAA,YAAAA,oBAAAA,IACA,sBACAtB,IAAAA,EAAAA,OAAAA,SACAC,IAAAA,EAAAA,OAAAA,WAEAoB,QAAAA,IAAAA,KAAAA,iBACA,yCACA,yBAGAE,WACA,sBACAC,MAAAA,CAAAA,cACAC,sBAAAA,CAAAC,QAAAA,MACAC,OAAAA,CACAC,KAAAA,KAAAA,IAAAA,GACAC,KAAAA,KAAAA,IAAAA,GACAC,MAAAA,KAAAA,IAAAA,GACAC,MAAAA,KAAAA,IAAAA,IAEAC,cAAAA,GAEAX,QAAAA,IAAAA,QAAAA,KAAAA,SACA,4CACA,0BAAAb,GACAyB,EAAAA,YAAAA,iBAAAA,KAIA,GAHA,wBACAZ,QAAAA,IAAAA,KAAAA,OAEA,qBAEA,qCACAA,QAAAA,IAAAA,GAEA,kBAEA,qCACAa,SAAAA,EACAnC,IAAAA,KAAAA,MAGA,oCACAoC,QAAAA,yDAEqBxD,KAAK8B,MAAMxB,mCACTN,KAAK8B,MAAM2B,mCACdzD,KAAK8B,MAAM4B,0DAG/BC,SAAAA,MAEAnC,EAAAA,KAAAA,KAAAA,IAAAA,KAAAA,SAEA,wBACAoC,SAAAA,KAAAA,MAAAA,SAAAA,SACAC,QAAAA,KAAAA,MAAAA,SACAvD,KAAAA,KAAAA,MAAAA,KACAwD,QAAAA,KAAAA,MAAAA,kBACAC,YAAAA,KAAAA,MAAAA,uBACAN,OAAAA,KAAAA,MAAAA,QAEAf,QAAAA,IAAAA,KAAAA,mBACA,0DACA,wBACA,yDAEA,yBACA,2DACAtB,IAAAA,KAAAA,OAGA,8CACA,6BACA4C,OAAAA,IAAAA,OAAAA,KAAAA,OACA,yBACA,0BAIAC,YAAAA,CACAJ,QAAAA,KAAAA,kBAAAA,SAEAK,WAAAA,YACA,QACA,UACA,iDC/L2P,I,OCQvPC,GAAY,OACd,EACArE,EACAoB,GACA,EACA,KACA,WACA,MAIF,EAAeiD,EAAiB","sources":["webpack://map/./src/views/restaurants.vue","webpack://map/src/views/restaurants.vue","webpack://map/./src/views/restaurants.vue?29b7","webpack://map/./src/views/restaurants.vue?2833"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('h2',{staticClass:\"restaurant_location\"},[_vm._v(\"桃園市熱門餐廳\")]),_c('div',{staticClass:\"map-container\"},[_c('div',{staticClass:\"search\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchInputRef),expression:\"searchInputRef\"}],ref:\"searchInputRef\",attrs:{\"id\":\"search-input\",\"type\":\"text\",\"placeholder\":\"請輸入餐廳名稱\"},domProps:{\"value\":(_vm.searchInputRef)},on:{\"input\":function($event){if($event.target.composing)return;_vm.searchInputRef=$event.target.value}}})]),_c('div',{staticClass:\"google-map\",attrs:{\"id\":\"map\"}})])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"restaurant_location\">桃園市熱門餐廳</h2>\r\n    <div class=\"map-container\">\r\n      <!-- <ul class=\"restaurant_nav\">\r\n        <li class=\"nav-item\">\r\n          <router-link\r\n            class=\"nav-link\"\r\n            :class=\"{active: $route.query.district === 'zhongli' || !$route.query.district}\"\r\n            :to=\"{name: 'restaurants', query: {district: 'zhongli'}}\"\r\n          >中壢區</router-link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <router-link\r\n            class=\"nav-link\"\r\n            :class=\"{active: $route.query.district === 'taoyuan'}\"\r\n            :to=\"{name: 'restaurants', query: {district: 'taoyuan'}}\"\r\n          >桃園區</router-link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <router-link\r\n            class=\"nav-link\"\r\n            :class=\"{active: $route.query.district === 'pingzhen'}\"\r\n            :to=\"{name: 'restaurants', query: {district: 'pingzhen'}}\"\r\n          >平鎮區</router-link>\r\n        </li>\r\n      </ul> -->\r\n      <div class=\"search\">\r\n        <input id=\"search-input\" type=\"text\" placeholder=\"請輸入餐廳名稱\" ref=\"searchInputRef\" v-model=\"searchInputRef\">\r\n      </div>\r\n      <!--地圖呈現在此-->\r\n      <div class=\"google-map\" id=\"map\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 引入餐廳 Dummy data\r\n// import zhongli from '../dummy_data/zhongli.json';\r\n// import taoyuan from '../dummy_data/taoyuan.json';\r\n// import pingzhen from '../dummy_data/pingzhen.json';\r\n\r\nexport default {\r\n  name: 'RestaurantsMap',\r\n  data() {\r\n    return {\r\n      map: null,\r\n      // 預設經緯度在中壢區附近\r\n      lat: 24.955405221676468,\r\n      lng: 121.22558478085799,\r\n      currentPosition: {},\r\n      // 存放目前開啟的訊息視窗\r\n      infowindow: null,\r\n      restaurants: [],\r\n      // 存放已建立的地標\r\n      markers: [],\r\n      isLoading: true,\r\n      selectRestaurants: {},\r\n      options: {},\r\n      searchInputRef: '', // place API要綁定的搜尋框\r\n      place: null, // 存place確定後回傳的資料\r\n      directiosService: null,\r\n      directiosRenderer: null\r\n    };\r\n  },\r\n  mounted() {\r\n    // 透過 query 確認要瀏覽的地區為何\r\n    // const { district } = this.$route.query;\r\n    // console.log(district);\r\n    // 取得餐廳假資料\r\n    // this.fetchRestaurants(district);\r\n    this.initMap();\r\n    this.siteAuto();\r\n    // 使用餐廳假資料建立地標\r\n    // this.setMarker();\r\n  },\r\n  // beforeRouteUpdate(to, from, next) {\r\n  //   const { district } = to.query;\r\n  //   // 取得餐廳假資料\r\n  //   this.fetchRestaurants(district);\r\n  //   // 設定新的地圖中心\r\n  //   this.resetCenter();\r\n  //   this.setMarker();\r\n  //   next();\r\n  // },\r\n  methods: {\r\n    // 建立地圖\r\n    initMap() {\r\n      // 透過 Map 物件建構子建立新地圖 map 物件實例，並將地圖呈現在 id 為 map 的元素中\r\n      this.map = new google.maps.Map(document.getElementById('map'), {\r\n        // 設定地圖的中心點經緯度位置\r\n        center: { lat: this.lat, lng: this.lng },\r\n        // 設定地圖縮放比例 0-20\r\n        zoom: 15,\r\n        // 限制使用者能縮放地圖的最大比例\r\n        maxZoom: 20,\r\n        // 限制使用者能縮放地圖的最小比例\r\n        minZoom: 3,\r\n        // 設定是否呈現右下角街景小人\r\n        streetViewControl: true,\r\n        // 設定是否讓使用者可以切換地圖樣式：一般、衛星圖等\r\n        mapTypeControl: false\r\n      });\r\n      if (navigator.geolocation) {\r\n        console.log('true');\r\n      }\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n          this.currentPosition = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          };\r\n          console.log(this.currentPosition);\r\n          this.map.setCenter(this.currentPosition);\r\n          this.map.setZoom(16);\r\n      })\r\n    },\r\n    siteAuto() {\r\n      const options = this.options = {\r\n        types: ['restaurant'],\r\n        componentRestrictions: { country: 'tw' },\r\n        bounds: {\r\n          east: this.lng + 0.1,\r\n          west: this.lng - 0.1,\r\n          south: this.lat - 0.1,\r\n          north: this.lat + 0.1\r\n        },\r\n        strictBounds: false\r\n      }\r\n      console.log('限制範圍:', this.options)\r\n      const autocomplete = new google.maps.places.Autocomplete(\r\n        this.$refs.searchInputRef, options);\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.place = autocomplete.getPlace();\r\n        console.log(this.place);\r\n         // 確認回來的資料有經緯度\r\n        if (this.place.geometry) {\r\n          // 改變map的中心點\r\n          const searchCenter = this.place.geometry.location;\r\n          console.log(searchCenter);\r\n          // panTo是平滑移動、setCenter是直接改變地圖中心\r\n          this.map.panTo(searchCenter);\r\n          // 在搜尋結果的地點上放置標記\r\n          this.markers = new google.maps.Marker({\r\n            position: searchCenter,\r\n            map: this.map\r\n          });\r\n          // // info window\r\n          const infowindow = new google.maps.InfoWindow({\r\n            content: `\r\n             <div id=\"content\">\r\n               <h3>${this.place.name}</h3>\r\n               <p>評價:${this.place.rating}顆星</p>\r\n               <p>${this.place.formatted_address}</p>\r\n             </div>\r\n           `,\r\n            maxWidth: 200\r\n          });\r\n          infowindow.open(this.map, this.markers);\r\n        }\r\n        this.selectRestaurants = {\r\n          location: this.place.geometry.location,\r\n          placeId: this.place.place_id,\r\n          name: this.place.name,\r\n          address: this.place.formatted_address,\r\n          phoneNumber: this.place.formatted_phone_number,\r\n          rating: this.place.rating\r\n        };\r\n        console.log(this.selectRestaurants);\r\n        this.markers.setPosition(this.selectRestaurants.location);\r\n        if (!this.directiosService) {\r\n          this.directiosService = new google.maps.DirectionsService();\r\n        }\r\n        if (!this.directiosRenderer) {\r\n          this.directiosRenderer = new google.maps.DirectionsRenderer({\r\n            map: this.map\r\n          });\r\n        }\r\n        this.directiosRenderer.set('directions', null);\r\n        this.directiosService.route({\r\n          origin: new google.maps.LatLng(\r\n            this.currentPosition.lat,\r\n            this.currentPosition.lng\r\n            // this.lat,\r\n            // this.lng\r\n          ),\r\n          destination: {\r\n            placeId: this.selectRestaurants.placeId\r\n          },\r\n          travelMode: 'WALKING'\r\n        }, (response, status) => {\r\n          if (status === 'OK') {\r\n            this.directiosRenderer.setDirections(response);\r\n          }\r\n        })\r\n      })\r\n    }\r\n    // fetchRestaurants(district = 'zhongli') {\r\n    //   let dummyData = {};\r\n    //   // 依照所選擇的地區使用對應的 dummy data\r\n    //   if (district === 'zhongli') {\r\n    //     dummyData = zhongli;\r\n    //   } else if (district === 'taoyuan') {\r\n    //     dummyData = taoyuan;\r\n    //   } else {\r\n    //     dummyData = pingzhen;\r\n    //   }\r\n\r\n    //   this.restaurants = dummyData.restaurants;\r\n    //   console.log(this.restaurants);\r\n    //   this.lat = dummyData.center.lat;\r\n    //   this.lng = dummyData.center.lng;\r\n    //   this.isLoading = false;\r\n    // },\r\n    // // 重設地圖中心點\r\n    // resetCenter() {\r\n    //   // set center\r\n    //   this.map.panTo({ lat: this.lat, lng: this.lng });\r\n    // },\r\n    // // 清除所有地標\r\n    // deleteMarkers() {\r\n    //   this.markers.forEach(marker => marker.setMap(null));\r\n    //   this.markers = [];\r\n    // },\r\n    // // 建立地標\r\n    // setMarker() {\r\n    //   // 將已存在的地標都先刪除\r\n    //   this.deleteMarkers();\r\n    //   // 建立一個新地標\r\n    //   // eslint-disable-next-line no-unused-vars\r\n    //   // 為每間餐廳都建立地標、訊息視窗、事件監聽\r\n    //   this.restaurants.forEach(location => {\r\n    //     const marker = new google.maps.Marker({\r\n    //       // 設定為該餐廳的座標\r\n    //       position: { lat: location.lat, lng: location.lng },\r\n    //       map: this.map\r\n    //     });\r\n    //   // eslint-disable-next-line no-unused-vars\r\n    //   // 將新建立的地標存起來\r\n    //   this.markers.push(marker);\r\n    //    // 透過 InfoWindow 物件建構子建立新訊息視窗\r\n    //     const infowindow = new google.maps.InfoWindow({\r\n    //       // 設定想要顯示的內容\r\n    //       content: `\r\n    //         <div id=\"content\">\r\n    //           <p id=\"firstHeading\" class=\"firstHeading\">${location.name}</p>\r\n    //         </div>\r\n    //       `,\r\n    //       // 設定訊息視窗最大寬度\r\n    //       maxWidth: 200\r\n    //     });\r\n    //     // 在地標上監聽點擊事件\r\n    //     marker.addListener('click', () => {\r\n    //       // 如果目前有開啟中的訊息視窗，先將其關閉\r\n    //       if (this.infowindow) this.infowindow.close();\r\n    //       // 指定在哪個地圖和地標上開啟訊息視窗\r\n    //       infowindow.open(this.map, marker);\r\n    //       // 存入目前開啟的訊息視窗\r\n    //       this.infowindow = infowindow;\r\n    //     });\r\n    //   })\r\n    // }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.google-map {\r\n  width: 100%;\r\n  height: 500px;\r\n}\r\n.restaurant_nav{\r\n    list-style: none;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    padding-left: 0;\r\n}\r\na{\r\n  font-size: 25px;\r\n  text-decoration: none;\r\n}\r\na.active {\r\n  border-bottom: 3px solid #007bff;\r\n}\r\n.search{\r\n  margin: 10px 0;\r\n}\r\n#search-input{\r\n  outline: none;\r\n  padding: 5px 10px;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./restaurants.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./restaurants.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./restaurants.vue?vue&type=template&id=66f91f21&scoped=true&\"\nimport script from \"./restaurants.vue?vue&type=script&lang=js&\"\nexport * from \"./restaurants.vue?vue&type=script&lang=js&\"\nimport style0 from \"./restaurants.vue?vue&type=style&index=0&id=66f91f21&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"66f91f21\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","directives","name","rawName","value","searchInputRef","expression","ref","attrs","domProps","on","$event","target","composing","staticRenderFns","data","map","lat","lng","currentPosition","infowindow","restaurants","markers","isLoading","selectRestaurants","options","place","directiosService","directiosRenderer","mounted","methods","initMap","center","zoom","maxZoom","minZoom","streetViewControl","mapTypeControl","console","navigator","siteAuto","types","componentRestrictions","country","bounds","east","west","south","north","strictBounds","autocomplete","position","content","rating","formatted_address","maxWidth","location","placeId","address","phoneNumber","origin","destination","travelMode","component"],"sourceRoot":""}